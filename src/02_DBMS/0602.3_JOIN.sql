-- [III] JOIN : 테이블 2개 이상을 연결하여 검색
SELECT * FROM EMP WHERE ENAME='SCOTT'; -- 부서번호(DEPTNO가 20)
SELECT * FROM DEPT;
-- CROSS JOIN (FROM절에 테이블 2개이상)
SELECT * FROM EMP, DEPT; -- 56행 = EMP의 14행 * DEPT의 4행
SELECT * FROM EMP, DEPT WHERE ENAME='SCOTT'; -- 4행 = EMP의 1행 * DEPT의 4행

-- ★ EQUI JOIN(공통 필드인 DEPTNO값이 일치되는 조건만 JOIN)
SELECT * FROM EMP, DEPT 
    WHERE ENAME='SCOTT' AND EMP.DEPTNO = DEPT.DEPTNO;
    
SELECT EMPNO, ENAME, EMP.DEPTNO, DNAME, LOC FROM EMP, DEPT
    WHERE EMP.DEPTNO=DEPT.DEPTNO;
  -- 테이블의 별칭이 있으면 그 별칭으로만 테이블을 액세스할 수 있다.    
  SELECT EMPNO NO, ENAME, E.DEPTNO, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    ORDER BY EMPNO;
    
  -- 급여가 2000이상인 직원만 이름, 업무(JOB), 급여, 부서명, 근무지 출력
  SELECT ENAME, JOB, SAL, DNAME, LOC 
    FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND SAL>=2000;
  -- LOC이 CHICAGO인 사람의 이름, 업무, 급여, 부서명, 근무지를 출력
  SELECT ENAME, JOB, SAL, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND LOC='CHICAGO';
  -- LOC이 CHICAGO인 사람의 이름, 업무, 급여를 출력
  SELECT ENAME, JOB, SAL FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
  -- 부서번호가 10 이거나 20번인 사원의 이름(ENAME), 업무(JOB), 근무지(LOC). 급여순
  SELECT ENAME, JOB, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO IN (10,20)
    ORDER BY SAL;
  -- JOB이 SALESMAN이거나 MANAGER인 사원의 
  -- 이름, 급여, 상여, 연봉((SAL+COMM)*12), 부서명, 근무지, 연봉이 큰 순으로 정렬
  SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0))*12 ANNUAL_SAL, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND (JOB='SALESMAN' OR JOB='MANAGER')
    ORDER BY ANNUAL_SAL DESC;
  SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0))*12 ANNUAL_SAL, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB IN ('SALESMAN','MANAGER')
    ORDER BY ANNUAL_SAL DESC;
  -- COMM이 NULL이고 급여가 1200이상인 사원의 이름, 급여, 입사일, 부서번호, 부서명
  -- 부서명순, 급여큰순 정렬
  SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL >=1200
    ORDER BY DNAME, SAL DESC;
  -- 'NEW YORK'에서 근무하는 사원의 이름과 급여 출력
  SELECT ENAME, SAL FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND LOC='NEW YORK';
  -- 'ACCOUNTING' 부서 소속의 사원 이름과 입사일 출력
  SELECT ENAME, HIREDATE FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND DNAME='ACCOUNTING';
  -- 직급이 MANAGER인 사원의 이름, 부서명 출력
  SELECT ENAME, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
  -- COMM이 NULL이 아닌 사원의 이름, 급여, 부서번호, 근무지 출력
  SELECT ENAME, SAL, E.DEPTNO, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND NOT COMM IS NULL;
  
-- ★ NON-EQUI JOIN
SELECT * FROM EMP WHERE ENAME='SCOTT';
SELECT * FROM SALGRADE; -- 급여 등급 정보
-- CROSS 5행 = EMP의 1행 * SALGRADE의 5행
SELECT * FROM EMP, SALGRADE WHERE ENAME='SCOTT' AND SAL>=LOSAL AND SAL<=HISAL; 
SELECT * FROM EMP, SALGRADE WHERE ENAME='SCOTT' AND SAL BETWEEN LOSAL AND HISAL; 
  -- 모든 사원의 사번, 이름, JOB, 상사사번, 급여, 급여등급(1등급, 2등급)
  SELECT EMPNO, ENAME, JOB, MGR, SAL, GRADE||'등급' FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
  -- COMM이 NULL아 아닌 사원의 이름, 급여, 급여등급, 부서번호, 부서이름, 근무지
  SELECT ENAME, SAL, GRADE, E.DEPTNO, DNAME, LOC FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL AND
      NOT COMM IS NULL;
  -- 이름, 급여, 입사일, 급여등급
  SELECT ENAME, SAL, HIREDATE, GRADE FROM EMP, SALGRADE 
    WHERE SAL BETWEEN LOSAL AND HISAL;
  -- 이름, 급여, 입사일, 급여등급, 부서명, 근무지
  SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL;
  -- 이름, 급여, 급여등급, 연봉 (부서번호순 정렬, 부서가 같으면 연봉순. 연봉=(SAL+COMM)*12)
  SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 ANNUAL_SAL
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY DEPTNO, ANNUAL_SAL;
  -- 이름, 급여, 급여등급, 연봉 (부서이름순 정렬, 부서가 같으면 연봉순. 연봉=(SAL+COMM)*12)
  SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 ANNUAL_SAL
    FROM EMP E, SALGRADE, DEPT D
    WHERE SAL BETWEEN LOSAL AND HISAL AND E.DEPTNO=D.DEPTNO
    ORDER BY DNAME, ANNUAL_SAL;
  -- 이름, 업무(JOB), 급여, 급여등급, 부서번호, 부서명
      -- (급여가 1000~3000사이, 부서이름, 업무, 급여큰 순 정렬)
  SELECT ENAME, JOB, SAL, GRADE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
          AND SAL BETWEEN 1000 AND 3000
    ORDER BY DNAME, JOB, SAL DESC;
  -- 이름, 급여, 등급, 입사일, 근무지 (81년에 입사한 사람만 출력. 등급 큰 순 정렬)
  SELECT ENAME, SAL, GRADE, HIREDATE, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND TO_CHAR(HIREDATE,'RR') ='81'
    ORDER BY GRADE DESC;
  
-- ★ SELF JOIN 
SELECT EMPNO, ENAME, MGR FROM EMP WHERE ENAME='SMITH'; -- 상사의 사번:7902
SELECT EMPNO, ENAME FROM EMP WHERE EMPNO=7902;

SELECT WORKER.EMPNO, WORKER.ENAME, WORKER.MGR, MANAGER.ENAME
  FROM EMP WORKER, EMP MANAGER
  WHERE WORKER.ENAME='SMITH' AND WORKER.MGR=MANAGER.EMPNO;
  -- 모든 사원의 사번, 이름, 상사의 사번, 상사의 이름
  SELECT W.EMPNO, W.ENAME, W.MGR, M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO; -- 13행 (KING의 MRG이 NULL이라서 출력안됨)
  SELECT * FROM EMP; -- 14행
  -- 'SMITH의 상사는 FORD다'포맷으로 출력
  SELECT W.ENAME || '의 상사는 ' || M.ENAME || '다(이다)'
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
  --탄탄1. 상사의 이름이 'KING'인 사원들의 이름과 JOB을 출력
  SELECT W.ENAME, W.JOB
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO AND M.ENAME='KING';
  --탄탄2. SCOTT과 동일한 부서번호에서 근무하는 사람의 이름 출력
  SELECT E2.ENAME
    FROM EMP E1, EMP E2
    WHERE E1.ENAME='SCOTT' AND E1.DEPTNO=E2.DEPTNO AND E2.ENAME!='SCOTT';
  --탄탄3. SCOTT과 동일한 근무지에서 근무하는 사람의 이름 출력
  SELECT E2.ENAME
    FROM EMP E1, DEPT D1, EMP E2, DEPT D2
    WHERE E1.ENAME='SCOTT' AND
      E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO AND D1.LOC=D2.LOC AND
      E2.ENAME ^= 'SCOTT';
  INSERT INTO DEPT VALUES (50,'IT','DALLAS');
  INSERT INTO EMP VALUES (9999,'홍',NULL,NULL,NULL,9000,NULL, 50);
  ROLLBACK; -- DML(데이터 조작어=추가+삭제+수정+검색) 취소
  SELECT * FROM DEPT;
  SELECT * FROM EMP;

-- ★ OUTER JOIN : 조인시 조건에 만족하지 않는 행까지 나타나게
-- SELF JION과 OUTER JOIN
SELECT W.ENAME, W.MGR, M.EMPNO, M.ENAME
  FROM EMP W, EMP M
  WHERE W.MGR = M.EMPNO(+);
  -- "SMITH의 매니저는 FORD입니다" 포맷으로 출력
  -- "KING의 매니저는 無입니다"
  SELECT W.ENAME ||'의 매니저는 ' || NVL(M.ENAME,'無') MSG
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
  -- 말단사원의 이름
  SELECT W.ENAME, W.MGR, M.EMPNO, M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL; -- 1단계
  SELECT M.EMPNO, M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL; -- 완성 2단계
  -- EQUI JION과 OUTER JOIN
  SELECT * FROM DEPT; -- 10,20,30,40번 부서
  SELECT * FROM EMP; -- 10,20,30번 부서
  SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO; -- 40번부서는 출력 안됨
  SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO(+)=D.DEPTNO; -- 40부서 포함
-- ★ 셤 연습문제
-- PART1
--1. 이름, 직속상사
SELECT W.ENAME, M.ENAME manager
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO;
--2. 이름, 급여, 업무, 직속상사이름
SELECT W.ENAME, W.SAL, W.JOB, M.ENAME MANAGER
  FROM EMP W, EMP M 
  WHERE W.MGR=M.EMPNO;
--3. 이름, 급여, 업무, 직속상사명. (상사가 없는 직원까지 전체 직원 다 출력.
    --상사가 없을 시 '없음'으로 출력)
SELECT W.ENAME, W.SAL, W.JOB, NVL(M.ENAME,'없음') MANAGER 
  FROM EMP W, EMP M 
  WHERE W.MGR=M.EMPNO(+);
--4. 이름, 급여, 부서명, 직속상사명
SELECT W.ENAME, W.SAL, DNAME, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D 
  WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO;
--5. 이름, 급여, 부서코드, 부서명, 근무지, 직속상사명, 
  -- (상사가 없는 직원까지 전체 직원 다 출력)
SELECT W.ENAME, W.SAL, W.DEPTNO, DNAME, LOC, NVL(M.ENAME,'상사없음') MANAGER
  FROM EMP W, EMP M, DEPT D
  WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO(+);
--6. 이름, 급여, 등급, 부서명, 직속상사명. 급여가 2000이상인 사람
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL
        AND W.SAL>=2000; -- 직속상사가 없는 직원까지 출력하려면 W.MGR=M.EMPNO(+)
--7. 이름, 급여, 등급, 부서명, 직속상사명, (직속상사가 없는 직원까지 전체직원 부서명 순 정렬)
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO 
    AND W.SAL BETWEEN LOSAL AND HISAL
  ORDER BY DNAME;
--8. 이름, 급여, 등급, 부서명, 연봉, 직속상사명. 연봉=(급여+comm)*12
SELECT W.ENAME, W.SAL, GRADE, DNAME, 
        (W.SAL+NVL(W.COMM,0))*12 ANNUAL_SAL, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D, SALGRADE 
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL;
--9. 8번을 부서명 순 부서가 같으면 급여가 큰 순 정렬
SELECT W.ENAME, W.SAL, GRADE, DNAME, 
        (W.SAL+NVL(W.COMM,0))*12 ANNUAL_SAL, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D, SALGRADE 
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL
  ORDER BY DNAME, W.SAL DESC; -- ORDER BY 절에는 SAL만 가능. SELECT 절에 있는 SAL로 인식
--  PART2
--1.모든 사원에 대한 이름,부서번호,부서명을 출력하는 SELECT 문장을 작성하여라.
SELECT ENAME, E.DEPTNO, DNAME FROM EMP E, DEPT D 
  WHERE E.DEPTNO=D.DEPTNO;
--2. EMP 테이블에서 NEW YORK에서 근무하고 있는 사원에 대하여 이름,업무,급여,부서명을 출력
SELECT ENAME, JOB, SAL, DNAME 
  FROM EMP E, DEPT D 
  WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--3. EMP 테이블에서 보너스를 받는 사원에 대하여 이름,부서명,위치를 출력
SELECT ENAME, DNAME, LOC
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL AND COMM <> 0;
--4. EMP 테이블에서 이름 중 L자가 있는 사원에 대하여 이름,업무,부서명,위치를 출력
SELECT ENAME, JOB, DNAME, LOC
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND ENAME LIKE '%L%';
--5. 사번, 사원명, 부서코드, 부서명을 검색하라. 사원명기준으로 오름차순정열
SELECT EMPNO, ENAME, D.DEPTNO, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO
  ORDER BY ENAME;
--6. 사번, 사원명, 급여, 부서명을 검색하라. 
    --단 급여가 2000이상인 사원에 대하여 급여를 기준으로 내림차순으로 정열하시오
SELECT EMPNO, ENAME, SAL, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000
  ORDER BY SAL DESC;
--7. 사번, 사원명, 업무, 급여, 부서명을 검색하시오. 단 업무가 MANAGER이며 급여가 2500이상인
-- 사원에 대하여 사번을 기준으로 오름차순으로 정열하시오.
SELECT EMPNO, ENAME, JOB, SAL, DNAME
  FROM EMP E, DEPT D
  WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER' AND SAL>=2500
  ORDER BY EMPNO;
--8. 사번, 사원명, 업무, 급여, 등급을 검색하시오. 단, 급여기준 내림차순으로 정렬하시오
SELECT EMPNO, ENAME, JOB, SAL, GRADE
  FROM EMP, SALGRADE
  WHERE SAL BETWEEN LOSAL AND HISAL
  ORDER BY SAL DESC;
--9. 사원테이블에서 사원명, 사원의 상사를 검색하시오(상사가 없는 직원까지 전체)
SELECT W.ENAME, M.ENAME MANAGER
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO(+);
--10. 사원명, 상사명, 상사의 상사명을 검색하시오
SELECT W.ENAME 사원, M.ENAME 상사, MM.ENAME 상사의상사
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO AND M.MGR=MM.EMPNO;
--11. 위의 결과에서 상위 상사가 없는 모든 직원의 이름도 출력되도록 수정하시오
SELECT W.ENAME 사원, M.ENAME 상사, MM.ENAME "상사의 상사"
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO(+) AND M.MGR=MM.EMPNO(+);
  

  
  